var _ = require("lodash");
var rpj = require("request-promise-json");
module.exports = (function () {
    function AuClients() {
        this.all = [];
        this.forserial = function (serial) {
            var a = [];
            _.map(this.all, function (s) {
                _.map(s.serials, function (ss) {
                    if (ss === serial) {
                        a.push(s.id);
                    }
                });
            });
            return a;
        };
    }
    AuClients.prototype.add = function (serials, sid) {
        this.all.push({ id: sid, serials: serials });
    };
    ;
    AuClients.prototype.remove = function (sid) {
        var all = this.all;
        _.map(this.all, function (s) {
            if (s.id === sid) {
                _.pull(all, s);
            }
        });
    };
    ;
    return AuClients;
})();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZXMvYXVkQ2xpZW50cy50cyJdLCJuYW1lcyI6WyJjb25zdHJ1Y3RvciIsImFkZCIsInJlbW92ZSJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBWSxDQUFDLFdBQU0sUUFBUSxDQUFDLENBQUE7QUFFNUIsSUFBSSxHQUFHLEdBQUcsT0FBTyxDQUFDLHNCQUFzQixDQUFDLENBQUM7QUFPMUMsaUJBQVM7SUFBQTtRQUVMQSxRQUFHQSxHQUFlQSxFQUFFQSxDQUFDQTtRQWlCckJBLGNBQVNBLEdBQUdBLFVBQVNBLE1BQU1BO1lBQ3ZCLElBQUksQ0FBQyxHQUFhLEVBQUUsQ0FBQztZQUNyQixDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsVUFBUyxDQUFXO2dCQUNoQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxPQUFPLEVBQUUsVUFBUyxFQUFFO29CQUN4QixFQUFFLENBQUMsQ0FBQyxFQUFFLEtBQUssTUFBTSxDQUFDLENBQUMsQ0FBQzt3QkFDaEIsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUM7b0JBQ2pCLENBQUM7Z0JBQ0wsQ0FBQyxDQUFDLENBQUM7WUFDUCxDQUFDLENBQUMsQ0FBQztZQUNILE1BQU0sQ0FBQyxDQUFDLENBQUM7UUFDYixDQUFDLENBQUNBO0lBQ05BLENBQUNBO0lBekJHLHVCQUFHLEdBQUgsVUFBSSxPQUFpQixFQUFFLEdBQVc7UUFDOUJDLElBQUlBLENBQUNBLEdBQUdBLENBQUNBLElBQUlBLENBQUNBLEVBQUVBLEVBQUVBLEVBQUVBLEdBQUdBLEVBQUVBLE9BQU9BLEVBQUVBLE9BQU9BLEVBQUVBLENBQUNBLENBQUNBO0lBRWpEQSxDQUFDQTs7SUFDRCwwQkFBTSxHQUFOLFVBQU8sR0FBRztRQUNOQyxJQUFJQSxHQUFHQSxHQUFHQSxJQUFJQSxDQUFDQSxHQUFHQSxDQUFDQTtRQUNuQkEsQ0FBQ0EsQ0FBQ0EsR0FBR0EsQ0FBQ0EsSUFBSUEsQ0FBQ0EsR0FBR0EsRUFBRUEsVUFBU0EsQ0FBV0E7WUFDaEMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsS0FBSyxHQUFHLENBQUMsQ0FBQyxDQUFDO2dCQUNmLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDO1lBQ25CLENBQUM7UUFDTCxDQUFDLENBQUNBLENBQUNBO0lBRVBBLENBQUNBOztJQWFMLGdCQUFDO0FBQUQsQ0E5QlMsQUE4QlIsR0FBQSxDQUFBIiwiZmlsZSI6Im1vZHVsZXMvYXVkQ2xpZW50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIF8gZnJvbSBcImxvZGFzaFwiO1xuaW1wb3J0ICogYXMgUHJvbWlzZSBmcm9tIFwiYmx1ZWJpcmRcIjtcbmxldCBycGogPSByZXF1aXJlKFwicmVxdWVzdC1wcm9taXNlLWpzb25cIik7XG5cbmludGVyZmFjZSBJQ2xpZW50cyB7XG4gICAgaWQ6IHN0cmluZztcbiAgICBzZXJpYWxzOiBzdHJpbmdbXTtcbn1cblxuZXhwb3J0ID0gY2xhc3MgQXVDbGllbnRzIHtcblxuICAgIGFsbDogSUNsaWVudHNbXSA9IFtdO1xuXG5cbiAgICBhZGQoc2VyaWFsczogc3RyaW5nW10sIHNpZDogc3RyaW5nKTogdm9pZCB7XG4gICAgICAgIHRoaXMuYWxsLnB1c2goeyBpZDogc2lkLCBzZXJpYWxzOiBzZXJpYWxzIH0pO1xuXG4gICAgfTtcbiAgICByZW1vdmUoc2lkKTogdm9pZCB7XG4gICAgICAgIGxldCBhbGwgPSB0aGlzLmFsbDtcbiAgICAgICAgXy5tYXAodGhpcy5hbGwsIGZ1bmN0aW9uKHM6IElDbGllbnRzKSB7XG4gICAgICAgICAgICBpZiAocy5pZCA9PT0gc2lkKSB7XG4gICAgICAgICAgICAgICAgXy5wdWxsKGFsbCwgcyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgfTtcblxuICAgIGZvcnNlcmlhbCA9IGZ1bmN0aW9uKHNlcmlhbCk6IHN0cmluZ1tdIHtcbiAgICAgICAgbGV0IGE6IHN0cmluZ1tdID0gW107XG4gICAgICAgIF8ubWFwKHRoaXMuYWxsLCBmdW5jdGlvbihzOiBJQ2xpZW50cykge1xuICAgICAgICAgICAgXy5tYXAocy5zZXJpYWxzLCBmdW5jdGlvbihzcykge1xuICAgICAgICAgICAgICAgIGlmIChzcyA9PT0gc2VyaWFsKSB7XG4gICAgICAgICAgICAgICAgICAgIGEucHVzaChzLmlkKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBhO1xuICAgIH07XG59XG5cbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
