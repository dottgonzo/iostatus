var _ = require("lodash");
var rpj = require('request-promise-json');
module.exports = (function () {
    function AuClients() {
        this.add = function (sid, serials) {
            this.all.push({ id: sid, serials: serials });
        };
        this.remove = function (sid) {
            var all = this.all;
            _.map(this.all, function (s) {
                if (s.id == sid) {
                    _.pull(all, s);
                }
            });
        };
        this.forserial = function (serial) {
            var a;
            _.map(this.all, function (s) {
                _.map(s.serials, function (ss) {
                    if (ss == serial) {
                        a.push(s.id);
                    }
                });
            });
            return a;
        };
    }
    return AuClients;
})();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZXMvYXVkQ2xpZW50cy50cyJdLCJuYW1lcyI6WyJjb25zdHJ1Y3RvciJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBWSxDQUFDLFdBQU0sUUFBUSxDQUFDLENBQUE7QUFFNUIsSUFBSSxHQUFHLEdBQUcsT0FBTyxDQUFDLHNCQUFzQixDQUFDLENBQUM7QUFPMUMsaUJBQU87SUFBQTtRQUtQQSxRQUFHQSxHQUFHQSxVQUFVQSxHQUFVQSxFQUFDQSxPQUFjQTtZQUN2QyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxFQUFDLEVBQUUsRUFBQyxHQUFHLEVBQUMsT0FBTyxFQUFDLE9BQU8sRUFBQyxDQUFDLENBQUE7UUFFekMsQ0FBQyxDQUFDQTtRQUNGQSxXQUFNQSxHQUFHQSxVQUFVQSxHQUFHQTtZQUNsQixJQUFJLEdBQUcsR0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDO1lBQ25CLENBQUMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBQyxVQUFTLENBQVU7Z0JBQ2hDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLElBQUUsR0FBRyxDQUFDLENBQUEsQ0FBQztvQkFDYixDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBQyxDQUFDLENBQUMsQ0FBQTtnQkFDZixDQUFDO1lBQ0gsQ0FBQyxDQUFDLENBQUE7UUFFSixDQUFDLENBQUNBO1FBRUZBLGNBQVNBLEdBQUdBLFVBQVVBLE1BQU1BO1lBQzVCLElBQUksQ0FBVSxDQUFDO1lBQ2IsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFDLFVBQVMsQ0FBVTtnQkFDaEMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsT0FBTyxFQUFDLFVBQVMsRUFBRTtvQkFDekIsRUFBRSxDQUFBLENBQUMsRUFBRSxJQUFFLE1BQU0sQ0FBQyxDQUFBLENBQUM7d0JBQ2IsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUE7b0JBQ2QsQ0FBQztnQkFDSCxDQUFDLENBQUMsQ0FBQTtZQUNKLENBQUMsQ0FBQyxDQUFBO1lBQ0YsTUFBTSxDQUFDLENBQUMsQ0FBQTtRQUNWLENBQUMsQ0FBQ0E7SUFDRkEsQ0FBQ0E7SUFBRCxnQkFBQztBQUFELENBOUJPLEFBOEJOLEdBQUEsQ0FBQSIsImZpbGUiOiJtb2R1bGVzL2F1ZENsaWVudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBfIGZyb20gXCJsb2Rhc2hcIjtcbmltcG9ydCAqIGFzIFByb21pc2UgZnJvbSBcImJsdWViaXJkXCI7XG5sZXQgcnBqID0gcmVxdWlyZSgncmVxdWVzdC1wcm9taXNlLWpzb24nKTtcblxuaW50ZXJmYWNlIElDbGllbnRze1xuICAgIGlkOnN0cmluZztcbiAgICBzZXJpYWxzOltzdHJpbmddXG59XG5cbmV4cG9ydD1jbGFzcyBBdUNsaWVudHMge1xuICAgIFxuICAgIGFsbDpbSUNsaWVudHNdO1xuICAgIFxuXG5hZGQgPSBmdW5jdGlvbiAoc2lkOnN0cmluZyxzZXJpYWxzOnN0cmluZyk6dm9pZCB7XG4gIHRoaXMuYWxsLnB1c2goe2lkOnNpZCxzZXJpYWxzOnNlcmlhbHN9KVxuXG59O1xucmVtb3ZlID0gZnVuY3Rpb24gKHNpZCk6dm9pZCB7XG4gICAgbGV0IGFsbD10aGlzLmFsbDtcbiAgXy5tYXAodGhpcy5hbGwsZnVuY3Rpb24oczpJQ2xpZW50cyl7XG4gICAgaWYgKHMuaWQ9PXNpZCl7XG4gICAgICBfLnB1bGwoYWxsLHMpXG4gICAgfVxuICB9KVxuXG59O1xuXG5mb3JzZXJpYWwgPSBmdW5jdGlvbiAoc2VyaWFsKTpbc3RyaW5nXSB7XG5sZXQgYTpbc3RyaW5nXTtcbiAgXy5tYXAodGhpcy5hbGwsZnVuY3Rpb24oczpJQ2xpZW50cyl7XG4gICAgXy5tYXAocy5zZXJpYWxzLGZ1bmN0aW9uKHNzKXtcbiAgICAgIGlmKHNzPT1zZXJpYWwpe1xuICAgICAgICBhLnB1c2gocy5pZClcbiAgICAgIH1cbiAgICB9KVxuICB9KVxuICByZXR1cm4gYVxufTtcbn1cblxuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
